import React, {useEffect, useState} from 'react'
import Head from 'next/head'
import styles from '../styles/Home.module.css'

export default function Home() {

  const [userAgent, setUserAgent] = useState(null)
const [userAgentData, setUserAgentData] = useState([])
const [vendor, setVendor] = useState(null)
const [appVersion, setAppVersion] = useState(null)
const [isMobile, setIsMobile] = useState(null)
const [browserName, setBrowserName] = useState(null)


  useEffect(() => {
   
    setUserAgent(navigator.userAgent)
    setUserAgentData(navigator?.userAgentData?.brands)
    setVendor(navigator.vendor)
    setAppVersion(navigator?.userAgentData?.platform)
    setIsMobile(navigator?.userAgentData?.mobile)
    setBrowserName(fnBrowserDetect())
  }, [])

  const handleCLick = () => {
    try {
      window.open('https://business.inspigo.id', '_blank')
    } catch (error) {
      alert(error.message)
    }
  }

  const handleCLickSelft = () => {
    try {
      window.open('https://business.inspigo.id', '_self')
    } catch (error) {
      alert(error.message)
    }
  }

  function fnBrowserDetect(){
                 
    let userAgent = navigator.userAgent;
    let browserName;
    
    if(userAgent.match(/chrome|chromium|crios/i)){
        browserName = "chrome";
      }else if(userAgent.match(/firefox|fxios/i)){
        browserName = "firefox";
      }  else if(userAgent.match(/safari/i)){
        browserName = "safari";
      }else if(userAgent.match(/opr\//i)){
        browserName = "opera";
      } else if(userAgent.match(/edg/i)){
        browserName = "edge";
      }else{
        browserName="No browser detection";
      }
    
    return browserName;      
}
  
  return (
    <div className={styles.container}>
      <Head>
        <title>Inspigo Test Browser App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <p>User Agent : {userAgent}</p>
        {userAgentData && userAgentData.map((val, key) => {
          return <p key={key}>{val.brand + " Version :"+ val.version}</p>
        })}
         <p>UserVendor : {vendor}</p>
         <p>Platform : {appVersion}</p>
         <p>Mobile: {isMobile ? 'true' : 'false'}</p>
         <p>Browser: {browserName}</p>


         <button type='button' onClick={handleCLick}>OPEN NEW TAB</button>
         <br/>
         <button type='button' onClick={handleCLickSelft}>REPLACE PAGE</button>

      </main>
    </div>
  )
}
